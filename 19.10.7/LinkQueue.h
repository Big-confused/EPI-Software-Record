#ifndef _LINKQUEUE_H_
#define _LINKQUEUE_H_

#include<stdio.h>
#include<malloc.h>

#define LinkQueueData int

typedef struct LinkQueueNode
{
	LinkQueueData data;
	struct LinkQueueNode* next;
}LQueueNode;

typedef struct LinkQueue
{
	LQueueNode *front, *rear;
}LinkQueue;

/*====================================================================
*功能：新建一个链式队列
*输出：指向链队的地址
====================================================================*/
LinkQueue* Init_LinkQueue();

/*====================================================================
*功能：判断链队是否为空
*输入：lq为链队的地址
*输出：链队为空返回1，不为空返回0，错误返回-1
====================================================================*/
int Empty_LinkQueue(LinkQueue* lq);

/*====================================================================
*功能：链队入队
*输入：lq为链队的地址，data为需入队的元素
*输出：成功返回1，失败返回0
====================================================================*/
int In_LinkQueue(LinkQueue* lq, LinkQueueData data);

/*====================================================================
*功能：链队出队
*输入：lq为链队的地址，data为需入队的元素
*输出：成功返回1，失败返回0
====================================================================*/
int Out_LinkQueue(LinkQueue* lq, LinkQueueData* data);

/*====================================================================
*功能：取链队头部的元素
*输入：lq为链队的地址，data为元素存入的位置
*输出：成功返回1，失败返回0
====================================================================*/
int	GetFront_LinkQueue(LinkQueue* lq, LinkQueueData* data);

/*====================================================================
*功能：清空链队
*输入：lq为链队的地址
*输出：成功返回1，失败返回0
====================================================================*/
int Clear_LinkQueue(LinkQueue* lq);

/*====================================================================
*功能：销毁链队
*输入：lq为指向链队的指针的地址
*输出：成功返回1，失败返回0
====================================================================*/
int Destory_LinkQueue(LinkQueue** lq);

#endif